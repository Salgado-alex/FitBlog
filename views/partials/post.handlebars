{{! Partial for a single post }}
<div class="post">
  <div class="post-avatar">
    <!-- the user's avatar -->
     <img src="{{#if user.avatar_url}}
                                        {{user.avatar_url}}
                                    {{else}}
                                        /avatar/{{username}}
                                    {{/if}}" 
                                    alt="User Avatar" 
                                    class="header-avatar">
  </div>
  <div class="post-content ">
    <!-- the post -->
    <h2>{{title}}</h2>
    {{! Title of Post }}
    <p>{{content}}</p>
    {{!Content of Post}}
     <div class="post-status-bar"> 
      <!-- everything that is shown in the status bar -->
      <!-- Heart = â™¥ -->
      <!-- font awesome  trashcan = <i class="fas fa-trash-alt"> </i>-->
      <span class="likes-count">Likes: {{likes}}</span>
      {{!# of likes}}
      <button
        class="like-button"
        data-id="{{id}}"
        onclick="handleLikeClick(event)"
      > <i class="fas fa-heart"></i>
      </button>{{!Like Button}}
      <button
        class="delete-button"
        data-id="{{id}}"
        onclick="handleDeleteClick(event)"
      > <i class="fas fa-trash-alt"> </i>  
      </button>
      {{! Delete button}}
       <p id="user-info-post">Posted by {{username}} on {{timestamp}}</p>
    {{!Post Info}}
    </div>
  </div>
</div>
<script>

     function handleLikeClick(event) {
      // you might want to "fetch" something...  
      const likeElement = event.target.closest('.like-button');
      const postId = likeElement.getAttribute('data-id');
      console.log('postId:', postId);
      // Send a post req
     fetch(`/like/${postId}`, {
            method: 'POST',
        })
        // If succesuful return .json
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        // If succesfull update likes
        .then(data => {
             const likeSpan = event.target.closest('.post-status-bar').querySelector('.likes-count');
            likeSpan.textContent = `Likes: ${data.likes}`;
        })
        // Handel any errors
        .catch(error => {
            console.error('There was a problem with your fetch operation:', error);
        });
    }
    function handleDeleteClick(event) {
        const buttonElement = event.target.closest('.delete-button');
        const postId = buttonElement.getAttribute('data-id');        

        // you might want to "fetch" something... 
  }   
</script>