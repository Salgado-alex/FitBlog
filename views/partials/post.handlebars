{{! The Features we submitted for our project survey were
we decided to change it to adding a picture to a post and 
making a comment to a post beacause these features will be able 
to make the user experience better

}}

{{! Partial for a single post }}
<div class="post">
  <div class="post-content">
    <!-- the user's avatar and username -->
    <div class="post-header">
        <div class="post-avatar">
            <img src="{{#if user.avatar_url}}{{user.avatar_url}}{{else}}/avatar/{{username}}{{/if}}" alt="User Avatar" class="header-avatar">
        </div>
        <div class="post-user-info">
            <span class="username">{{username}}</span>
            <span class="timestamp">{{timestamp}}</span>
        </div>
    </div>
    <!-- the post -->
    {{#if image}}
      <img src="{{image}}" alt="Post image" class="post-image">
    {{/if}}
    <h2>{{title}}</h2>
    <p>{{content}}</p>
    <!-- everything that is shown in the status bar -->
    <div class="post-status-bar"> 
      <!-- Number of likes -->
      <span class="likes-count">Likes: {{likes}}</span>
      <!-- Like Button -->
      <button class="like-button" data-id="{{id}}" onclick="handleLikeClick(event)"><i class="far fa-heart"></i></button>
      <!-- Delete button -->
      <button class="delete-button" data-id="{{id}}" onclick="handleDeleteClick(event)"><i class="fas fa-trash-alt"></i></button>
    </div>
  </div>
</div>

<script>
  function handleLikeClick(event) {

    // you might want to "fetch" something...  
    const likeElement = event.target.closest('.like-button');
    const postId = likeElement.getAttribute('data-id');
    console.log('postId:', postId);
    // Send a post req
    fetch(`/like/${postId}`, {
      method: 'POST',
  })
    // If succesuful return .json
    .then(response => {

      if (!response.ok) {
      throw new Error('Network response was not ok');
    }
      return response.json();
    })
    // If succesfull update likes
    .then(data => {

      const likeSpan = event.target.closest('.post-status-bar').querySelector('.likes-count');
      likeSpan.textContent = `Likes: ${data.likes}`;
    })
    // Handel any errors
    .catch(error => {
      console.error('There was a problem with your fetch operation:', error);
    });
    }
    function handleDeleteClick(event) {

      const buttonElement = event.target.closest('.delete-button');
      const postId = buttonElement.getAttribute('data-id'); 
      console.log(postId)
             

      // you might want to "fetch" something...
      fetch(`/delete/${postId}`, {

        method: 'POST',
        credentials: 'same-origin'

      })
      // If succesuful return .json
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
          return response.json();
      })
        // If succesfull delete
      .then(data => {
        console.log(data.message);
        const postElement = buttonElement.closest('.post');
        console.log("Post Element:", postElement);
        if (postElement) {
            postElement.remove();
          
        } else {
            console.error('Post element not found');
        }
    })
      // Handel any errors
      .catch(error => {
        console.error('There was a problem with your fetch operation:', error);
      });
    }  
</script>
