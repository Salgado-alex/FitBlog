{{! Use the main layout }}
{{!< main }}

{{! New Post Submission Form }}
<section class="content-container">
   {{! <div class="create-post-section">}}

    {{#if loggedIn}}
        <!-- show the create post form when logged in -->
        
        <section class="post-form">
            <h1 class="home-title">Create a New post</h1>
            <!-- make a header here -->
            <form action="/posts" method="POST" enctype="multipart/form-data">
                <!-- title input field name = "title" -->
                <!-- text area input field name = "content" -->
                <input type="text" placeholder="Title" name="title" id="title">
                <textarea type="text" placeholder="What is on you're mind {{user.username}}"  name="postInfo" id="postInfo" required></textarea>
                <div class="form-actions">
                    <!-- Once the emoji-button is pressed envoke the toggleEmojiPanel function-->
                    <button type="button" class="emoji-button" onclick="toggleEmojiPanel()">ðŸ’ª</button>
                    {{!upload pic}}
                    <input type="file" name="image" class="file_upload">    
                    <button type="submit" class="post-button">Post</button>
                </div>
            </form>

            <!-- Format of how the emojs will look -->
            <div id="emoji-container" class="emoji-panel" style="display: none;">
                <!-- input field for the emoji input, use oninput="searchEmojis() -->
                <input type="text" id="emoji-input" placeholder="Search emojis" oninput="searchEmojis()">
                <div id="emoji-grid"></div>
            </div>
        </section>
    {{/if}}
    {{!</div>}}
    <section class="posts-list">
        <!-- recent posts -->
        <h1 class="home-title">Recent Post</h1>
        <!-- Dropdown Menu for Category Selection -->
  <form action="/posts" method="get" id="filterForm">
    <label for="category">Filter:</label>
    <select name="category" id="category" onchange="document.getElementById('filterForm').submit()">
      <option value="all">Options</option>
      <option value="mostlikes">Most likes</option>
      <option value="Oldest">Oldest</option>
      <option value="Recent">Recent</option>
    </select>
  </form>
        {{#if posts.length}}
        <ul>
            {{#each posts}}
                <!-- you have to pass the user in to posts and this is the syntax -->
                {{> post this user=../user}}            
            {{/each}}
        </ul>
        {{else}}
            <!-- no posts, oh no, what now? -->
            <p>No posts available.</p>
        {{/if}}
    </section>
</section>


{{! JavaScript for Emoji Integration }}
<script>

/*
 You want to show a subset of the emojis. About 200. However,
 you also want the user to be able to search all emojis,
 so, put them in this array when the array is empty so 
 that you have them.
*/

// Global list to hold all emojis
let allEmojis = [];  

function toggleEmojiPanel() {
    const container = document.getElementById('emoji-container');
    container.style.display = container.style.display === 'none' ? 'block' : 'none';
    // If emoji panel is being displayed and array of emokis is empty. Search for the emojis
    if(container.style.display === 'block' && allEmojis.length == 0){
        // go "Fetch" you some emojis and show them off with displayEmojies
        searchEmojis();
    }
}

// Function that displays a limit of 200 emojis
function displayEmojis(emojis,limit=200) {
    const container = document.getElementById('emoji-grid');
    container.innerHTML = '';  
    if (Array.isArray(emojis) && emojis.length > 0) {
        emojis.slice(0, limit).forEach(emoji => {
            const emojiElement = document.createElement('span');
            emojiElement.textContent = emoji.character;
            emojiElement.title = emoji.slug; 
            emojiElement.style.cursor = 'pointer';
            emojiElement.onclick = () => insertEmoji(emoji.character);
            container.appendChild(emojiElement);
        });
    } else {
        container.textContent = 'No emojis found. Try a different search!';
    }
}

// Searches for emojis 
function searchEmojis() {
    // Get the input of what the user is typing
    const input = document.getElementById('emoji-input').value;
    // API key
    const apiKey = 'ad6c364fbb24a47f20dc63561c4eb0125e9de92b';

    console.log('Fetching emojis for search term:', input); 
    // If api isnt working.
    if(!apiKey){
        alert('Api token is not loaded. Please check your cookie settings');
        return;
    }
    // Url will used to make a fetch request to Emoji API
    // The url is constructed bases on the users input and api key
    // It a call to search for a specfic emoji 
    const url = `https://emoji-api.com/emojis?search=${input}&access_key=${apiKey}`;
    console.log('API URL:', url); 
    // Send fetch request with url to the url
    fetch(url)
        // When succuesful
        // Returns a response Object
        // Parses it with .json()
        .then(response => response.json())
        // Once succesful it stores that parsed data in data and we put it onto the empty array 
        .then(data => {
            console.log('Emojis data:', data);
            allEmojis = data;
            // Call display function with the emoji data
            displayEmojis(allEmojis);
        })
        // If something goes wrong excute this
        .catch(error => {
            console.error('Error fetching emojis:', error);
            alert('Failed to fetch emojis. Please try again later.');
        });
}

function insertEmoji(emoji) {
    // put an emoji on a form somehow. 
    // do this when you're doing getting the emoji on the form
    const textarea = document.getElementById('postInfo');
    const currentContent = textarea.value;
    textarea.value = currentContent + emoji;
    textarea.focus();  // Keep focus on the textarea
}
</script>

